<UserControl x:Class="ExtensionUI.ToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="MyToolWindow">
	<UserControl.Resources>
		<Style x:Key="ToolTextBox" TargetType="{x:Type TextBox}">
			<Setter Property="Width" Value="300"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Margin" Value="15,10"/>
			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ActiveBorderKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolboxDividerKey}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ControlEditHintTextKey}}"/>
		</Style>

		<Style x:Key="ToolButton" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Padding" Value="5"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}" Margin="15,10" Padding="5,0">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ComboBoxBackgroundKey}}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>
	<Grid Name="grid_root">
		<Grid.RowDefinitions>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="auto"/>
			<ColumnDefinition Width="auto"/>
		</Grid.ColumnDefinitions>

		<TextBox Grid.Row="0" Grid.Column="0"
                 Name="txt_folderPath"
                 Text="{Binding PickedFolderPath,  Mode=TwoWay}"
				 IsReadOnly="True"
				 Style="{StaticResource ToolTextBox}"
                 />

		<Button Grid.Row="0" Grid.Column="1"
                Name="btn_browse"
                Click="btn_browse_Click"
				Content="Browse"
				Width="80"
				HorizontalAlignment="Left"
				Style="{StaticResource ToolButton}">
		</Button>

		<StackPanel Grid.Row="1" Grid.Column="0"
					Orientation="Vertical"
					>
			<Label Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"
				   Content="CLI type:"
				   Margin="10,0,0,0"/>
			<ComboBox 
                  Width="200"
                  Height="25"
				  FontSize="12"
				  Margin="15,0,0,0"
                  IsTextSearchEnabled="False"
                  Name="cmd_cli_type"
                  ItemsSource="{Binding CliTypes}"
				  HorizontalAlignment="Left" 
				  SelectionChanged="cmd_cli_type_SelectionChanged"
				  SelectedIndex="0"
				  ToolTip="Select an CLI type, or add a new one"
				  IsEnabled="{Binding IsEnabled}"
				  >
			</ComboBox>
		</StackPanel>

		<Button Grid.Row="1" Grid.Column="1"
				Name="btn_upload"
				Style="{StaticResource ToolButton}"
				Content="Upload"
				Width="80"
				HorizontalAlignment="Left"
				VerticalAlignment="Bottom"
				Click="btn_upload_Click"
				></Button>

		<StackPanel Grid.Row="2" Grid.Column="0"
					Orientation="Vertical">
			<Label Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"
				   Content="Commands:"
				   Margin="10,0,0,0"/>
			<ComboBox 
				  Margin="15,0,0,0"
                  Width="200"
                  Height="25"
				  FontSize="12"
                  IsTextSearchEnabled="False"
                  Name="cmb_commands"
                  ItemsSource="{Binding Commands, Mode=TwoWay}"
                  Text="{Binding SearchText}"
				  HorizontalAlignment="Left" 
				  SelectionChanged="cmb_commands_SelectionChanged"
				  IsEnabled="{Binding IsEnabled }"
				  ToolTip="Select a command from list"
				>
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<ListBoxItem Content="{Binding Name}" ToolTip="{Binding Description}">
						</ListBoxItem>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
		</StackPanel>

		<Expander Grid.Row="3" Grid.Column="0"
				  Header="Arguments"
				  Margin="15,15,0,5"
				  Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"
				  Name="exp_arguments"
				  ToolTip="You can select here the arguments of the command"
				  IsEnabled="False"
				  >
			<DataGrid 
				  ItemsSource="{Binding Arguments}"
				  AutoGenerateColumns="False"
				  FontSize="12"
				  Width="285"
				  MaxHeight="70"
				  Padding="15,5,0,0"
				  CanUserAddRows="False"
				  CanUserDeleteRows="False"
				  CanUserReorderColumns="False"
				  CanUserResizeColumns="True"
				  CanUserResizeRows="True"
				  CanUserSortColumns="False"
				  HeadersVisibility="None"
				  GridLinesVisibility="None"
				  BorderThickness="0"
				  FocusVisualStyle="{x:Null}"
				  Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
				  VerticalScrollBarVisibility="Auto"
				  >
				<DataGrid.Columns>
					<DataGridTextColumn 
					Binding="{Binding Name}"
					IsReadOnly="True"
					Width="100">
						<DataGridTextColumn.CellStyle>
							<Style TargetType="DataGridCell">
								<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"/>
								<Setter Property="BorderThickness" Value="0"/>
								<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
								<Setter Property="ToolTip" Value="{Binding Description}"/>
							</Style>
						</DataGridTextColumn.CellStyle>
					</DataGridTextColumn>

					<DataGridCheckBoxColumn 
					Binding="{Binding IsSelected}"
					Width="40">
						<DataGridCheckBoxColumn.CellStyle>
							<Style TargetType="DataGridCell">
								<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"/>
								<Setter Property="BorderThickness" Value="0"/>
								<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
								<Setter Property="ToolTip" Value="Select argument"/>
							</Style>
						</DataGridCheckBoxColumn.CellStyle>
					</DataGridCheckBoxColumn>

					<DataGridTextColumn 
					Binding="{Binding ArgumentValue}"
					Width="*">
						<DataGridTextColumn.CellStyle>
							<Style TargetType="DataGridCell">
								<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"/>
								<Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ActiveBorderKey}}"/>
								<Setter Property="ToolTip" Value="{Binding ArgumentToolTip}"/>
							</Style>
						</DataGridTextColumn.CellStyle>
					</DataGridTextColumn>
				</DataGrid.Columns>
			</DataGrid>
		</Expander>

		<Expander Grid.Row="4" Grid.Column="0"
				  Header="Options"
				  Margin="15,15,0,5"
				  Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"
				  ToolTip="You can select here the options of the command"
				  IsEnabled="False"
				  Name="exp_options"
				  >
			<DataGrid 
				  ItemsSource="{Binding Options}"
				  AutoGenerateColumns="False"
				  FontSize="12"
				  Width="285"
				  MaxHeight="70"
				  Padding="15,5,0,0"
				  CanUserAddRows="False"
				  CanUserDeleteRows="False"
				  CanUserReorderColumns="False"
				  CanUserResizeColumns="True"
				  CanUserResizeRows="True"
				  CanUserSortColumns="False"
				  HeadersVisibility="None"
				  GridLinesVisibility="None"
				  BorderThickness="0"
				  FocusVisualStyle="{x:Null}"
				  Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
				  VerticalScrollBarVisibility="Auto"
				>
				<DataGrid.Columns>
					<DataGridTextColumn Binding="{Binding Name}" Width="100" IsReadOnly="True">
						<DataGridTextColumn.CellStyle>
							<Style TargetType="DataGridCell">
								<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"/>
								<Setter Property="BorderThickness" Value="0"/>
								<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							</Style>
						</DataGridTextColumn.CellStyle>
					</DataGridTextColumn>
					<DataGridTemplateColumn Width="*">
						<DataGridTemplateColumn.CellStyle>
							<Style TargetType="DataGridCell">
								<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"/>
								<Setter Property="BorderThickness" Value="0"/>
								<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
								<Setter Property="ToolTip" Value="{Binding Description}"/>
							</Style>
						</DataGridTemplateColumn.CellStyle>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<ContentControl Content="{Binding}">
									<ContentControl.Style>
										<Style TargetType="ContentControl">
											<Style.Triggers>
												<DataTrigger Binding="{Binding OptionType}" Value="string">
													<Setter Property="ContentTemplate">
														<Setter.Value>
															<DataTemplate>
																<TextBox 
																	 Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
																	 Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ControlEditHintTextKey}}"
																	 Text="{Binding OptionValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																	 />
															</DataTemplate>
														</Setter.Value>
													</Setter>
													<Setter Property="ToolTip" Value="Type the options parameter"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding OptionType}" Value="bool">
													<Setter Property="ContentTemplate">
														<Setter.Value>
															<DataTemplate>
																<CheckBox HorizontalAlignment="Left" 
																	  IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																	  />
															</DataTemplate>
														</Setter.Value>
													</Setter>
													<Setter Property="ToolTip" Value="Select option"/>
													<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</ContentControl.Style>
								</ContentControl>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>
			</DataGrid>

		</Expander>

		<StackPanel Grid.Row="5" Grid.Column="0"
			>
			<Label Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"
				   Content="Command preview:"
				   Margin="10,0,0,0"/>
			<TextBox 
					 Name="txt_command"
					 Text="{ Binding FullCommandText }"
					 Style="{StaticResource ToolTextBox}"
					 IsEnabled="{Binding IsEnabled }"
					 IsReadOnly="True"
					 />
		</StackPanel>

		<StackPanel  Grid.Row="5" Grid.Column="1"
			Orientation="Horizontal" VerticalAlignment="Bottom">
			<Button 
                Name="btn_preview"
                Click="btn_preview_Click"
				Content="Preview"
				Width="82"
				HorizontalAlignment="Left"
				Style="{StaticResource ToolButton}"
				ToolTip="Generate the command"
				IsEnabled="{Binding IsEnabled}"
				>
			</Button>
			<Button 
                Name="btn_copy"
                Click="btn_copy_Click"
				Content="Copy"
				Width="80"
				HorizontalAlignment="Left"
				Style="{StaticResource ToolButton}"
				ToolTip="Copy command text to clipboard"
				IsEnabled="{Binding IsEnabled}"
				>
			</Button>
		</StackPanel>

		<StackPanel Grid.Row="6" Grid.Column="0"
					Orientation="Horizontal">
			<Button
                Name="btn_run"
                HorizontalAlignment="Left"
				Style="{StaticResource ToolButton}"
				Click="Btn_run_Click"
				IsEnabled="{Binding IsEnabled}"
                >Run</Button>

			<Label Foreground="Red"
				   Content="Invalid Command"
				   Margin="10,0,0,0"
				   Visibility="Hidden"
				   Name="lbl_invalid"/>
					
		</StackPanel>
	</Grid>
</UserControl>
